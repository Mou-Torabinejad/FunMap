@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix base: <http://tib.de/ontario/mapping#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix iasis: <http://project-iasis.eu/vocab/> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix ex: <http://www.example.com/> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@base <http://www.example.com> .

<#TriplesMap1> a rr:TriplesMap;
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/Mutation/{GENOMIC_MUTATION_ID}";
        rr:class iasis:Mutation;
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:isLocatedIn;
        rr:objectMap <#FunctionMap1>
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:tissue;
        rr:objectMap [ 
            rml:reference "Primary site" 
        ]
    ].    

<#TriplesMap2> a rr:TriplesMap;
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/GenomicPosition/{cFormat}";
        rr:class iasis:GenomicPosition;
    ];  
    rr:predicateObjectMap [
        rr:predicate iasis:isOn;
        rr:objectMap <#FunctionMap1> 
    ].

<#TriplesMap3> a rr:TriplesMap;
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/Gene/{Gene name}";
        rr:class iasis:Gene;
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:isLocatedIn;
        rr:objectMap <#FunctionMap1>
    ].

<#TriplesMap4> a rr:TriplesMap;
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/Variant/{Mutation CDS}";
        rr:class iasis:Variant;
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:isObservedIn;
        rr:objectMap <#FunctionMap1>
    ].

<#TriplesMap5>
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/TumorTissue/{Primary site}";
        rr:class iasis:TumorTissue;
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:isRelatedTo;
        rr:objectMap <#FunctionMap1> 
    ]. 

<#TriplesMap6>
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/Mutation/{GENOMIC_MUTATION_ID}";
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:hasPosition;
        rr:objectMap <#FunctionMap1> 
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:tissue;
        rr:objectMap [ 
            rml:reference "Primary site" 
        ]
    ].    

<#TriplesMap7>
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/GenomicPosition/{cFormat}";
    ];  
    rr:predicateObjectMap [
        rr:predicate iasis:isLocatedIn;
        rr:objectMap <#FunctionMap1> 
    ].

<#TriplesMap8>
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/Gene/{Gene name}";
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:isRelatedTo;
        rr:objectMap <#FunctionMap1> 
    ].

<#TriplesMap9>
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/Variant/{Mutation CDS}";
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:isOn;
        rr:objectMap <#FunctionMap1> 
    ].    

<#TriplesMap10>
    rml:logicalSource [ rml:source "data.csv";
                        rml:referenceFormulation ql:CSV ];
    rr:subjectMap [
        rr:template "http://project-iasis.eu/TumorTissue/{Primary site}";
    ];
    rr:predicateObjectMap [
        rr:predicate iasis:hasPosition;
        rr:objectMap <#FunctionMap1> 
    ].     

<#FunctionMap1> 
    a fnml:FunctionTermMap;

    fnml:functionValue [
        rml:logicalSource [ rml:source "data.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant grel:string_replace
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate grel:valueParameter;
            rr:objectMap [ 
                rml:reference "Mutation genome position" 
            ]
        ];  
        rr:predicateObjectMap [
            rr:predicate grel:p_string_find;
            rr:objectMap [ 
                rr:constant "-"; 
            ]
        ];  
        rr:predicateObjectMap [
            rr:predicate grel:p_string_replace;
            rr:objectMap [ 
                rr:constant ":"; 
            ]
        ]; 
        ].

grel:toUpperCase a fno:Function ;
  fno:name "to Uppercase" ;
  rdfs:label "to Uppercase" ;
  dcterms:description "Returns the input with all letters in upper case." ;
  fno:expects ( grel:valueParam ) ;
  fno:returns ( grel:stringOut ) .

grel:valueParam a fno:Parameter ;
  fno:name "input value" ;
  rdfs:label "input value" ;
  fno:type xsd:string ;
  fno:predicate grel:valueParameter .

grel:stringOut a fno:Output ;
  fno:name "output string" ;
  rdfs:label "output string" ;
  fno:type xsd:string ;
  fno:predicate grel:stringOutput .

grel:string_replace
    a                   fno:Function ;
    fno:name            "replace" ;
    dcterms:description "replace" ;
    fno:solves          grel:prob_replace ;
    fno:expects         ( grel:valueParam grel:param_find grel:param_replace ) ;
    fno:returns         ( grel:stringOut ) .

grel:param_find
    a             fno:Parameter ;
    fno:name      "f" ;
    rdfs:label    "f" ;
    fno:predicate grel:p_string_find ;
    fno:type      xsd:string ;
    fno:required  "true"^^xsd:boolean .

grel:param_replace
    a             fno:Parameter ;
    fno:name      "r" ;
    rdfs:label    "r" ;
    fno:predicate grel:p_string_replace ;
    fno:type      xsd:string ;
    fno:required  "true"^^xsd:boolean .

grel:toLowerCase
    a                   fno:Function ;
    fno:name            "to Lowercase" ;
    rdfs:label          "to Lowercase" ;
    dcterms:description "Returns the input with all letters in lower case." ;
    fno:solves          grel:prob_lcase ;
    fno:expects         ( grel:valueParam ) ;
    fno:returns         ( grel:stringOut ) .
